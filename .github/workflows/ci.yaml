name: Release Ghidra
on:
  pull_request:
  push:
    branches:
      - batteries-included

jobs:
  build-natives:
    name: Build Native Binaries
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          - { task: osx64,   os: macos-latest,   dist: natives-macos }
          - { task: win64,   os: windows-latest, dist: natives-win }
          - { task: linux64, os: ubuntu-latest,  dist: natives-linux }

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: 11
      - uses: eskatos/gradle-command-action@v1
        with:
          gradle-version: current
          arguments: --init-script gradle/support/fetchDependencies.gradle init
      - uses: eskatos/gradle-command-action@v1
        with:
          gradle-version: current
          arguments: buildNatives_${{ matrix.task }}
      - name: Upload Native Binary
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.dist }}
          path: "**/build/os/${{ matrix.task }}/"

  dist-ghidra:
    name: Build and Release Ghidra
    if: github.ref == 'refs/heads/batteries-included'
    needs: [ build-natives ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Download windows binaries
        uses: actions/download-artifact@v2
        with:
          name: natives-windows
      - name: Download MacOS binaries
        uses: actions/download-artifact@v2
        with:
          name: natives-macos
      - name: Download Linux binaries
        uses: actions/download-artifact@v2
        with:
          name: natives-linux

      - uses: actions/setup-java@v1
        with:
          java-version: 11
      - uses: eskatos/gradle-command-action@v1
        with:
          gradle-version: current
          arguments: --init-script gradle/support/fetchDependencies.gradle init

      - name: Download ghidra-data
        uses: actions/checkout@v2
        with:
          repository: NationalSecurityAgency/ghidra-data
          path: ghidra-data
      - name: Copy ghidra-data files into the appropriate directories
        run: cp -r ghidra-data/FunctionID/* Ghidra/Features/FunctionID/data

      - name: Build ghidra, create a cross-platform distribution
        uses: eskatos/gradle-command-action@v1
        with:
          gradle-version: current
          arguments: -x ip -PallPlatforms buildGhidra

      - name: Upload Ghidra Zip
        uses: actions/upload-artifact@v2
        with:
          name: ghidra
          path: "build/dist/*"

      - name: Get current date, rev and dist name
        id: date
        run: |
          echo ::set-output name=date::$(date +'%Y-%m-%d')
          echo ::set-output name=dist::$(ls build/dist)
          echo ::set-output name=rev::$(git rev-parse --short HEAD)
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.date.outputs.date }}
          release_name: Release ${{ steps.date.outputs.date }}(${{ steps.date.outputs.rev }})
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/dist/${{ steps.date.outputs.dist }}
          asset_name: release.zip
          asset_content_type: application/zip

